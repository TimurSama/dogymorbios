'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { 
  ChevronLeft, ChevronRight, Target, TrendingUp, Users, 
  DollarSign, Zap, Award, Heart, Globe, Rocket 
} from 'lucide-react'
import { AppBar } from '@/components/navigation/AppBar'
import { Card } from '@/components/ui/Card'
import { Button } from '@/components/ui/Button'
import { DoghouseIcon, PawHeartIcon, BoneIcon } from '@/components/icons/DogymorbisIcons'

const generalSlides = [
  {
    id: 1,
    title: 'Dogymorbis',
    subtitle: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å –∏ DAO –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫',
    content: '–ï–¥–∏–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∞—è –∫–∞—Ä—Ç—É –ø—Ä–æ–≥—É–ª–æ–∫, —Å–æ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Ç—å, –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –∏ –¥–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
    icon: <DoghouseIcon size={80} className="text-sky" />,
    gradient: 'from-sky to-info',
  },
  {
    id: 2,
    title: '–ü—Ä–æ–±–ª–µ–º–∞',
    subtitle: '–†–∞–∑—Ä–æ–∑–Ω–µ–Ω–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤',
    content: '–í–ª–∞–¥–µ–ª—å—Ü—ã —Å–æ–±–∞–∫ –≤—ã–Ω—É–∂–¥–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π: –∫–∞—Ä—Ç—ã –¥–ª—è –ø—Ä–æ–≥—É–ª–æ–∫, —Å–æ—Ü—Å–µ—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã –¥–ª—è –ø–æ–∫—É–ø–æ–∫, –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –¥—Ä–µ—Å—Å–∏—Ä–æ–≤–∫–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è',
    points: [
      '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –µ–¥–∏–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –¥–ª—è —Å–æ–±–∞—á–Ω–∏–∫–æ–≤',
      '–°–ª–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø–æ –ø—Ä–æ–≥—É–ª–∫–∞–º',
      '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º',
    ],
    gradient: 'from-burgundy to-danger',
  },
  {
    id: 3,
    title: '–†–µ—à–µ–Ω–∏–µ',
    subtitle: '–í—Å—ë –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ',
    content: 'Dogymorbis –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –µ–¥–∏–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
    features: [
      { icon: 'üó∫Ô∏è', title: '–ö–∞—Ä—Ç–∞ –ø—Ä–æ–≥—É–ª–æ–∫', desc: 'GPS-—Ç—Ä–µ–∫–∏–Ω–≥, –º–∞—Ä—à—Ä—É—Ç—ã, –ª–æ–∫–∞—Ü–∏–∏' },
      { icon: 'üì±', title: '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å–µ—Ç—å', desc: '–ü–æ—Å—Ç—ã, –ª–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏' },
      { icon: 'üí∞', title: 'BoneCoin', desc: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å' },
      { icon: 'üõí', title: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', desc: '–¢–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –¥–ª—è –ø–∏—Ç–æ–º—Ü–µ–≤' },
      { icon: 'üèõÔ∏è', title: 'DAO', desc: '–î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ' },
      { icon: 'üéÆ', title: '–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è', desc: '–ó–∞–¥–∞–Ω–∏—è, –Ω–∞–≥—Ä–∞–¥—ã, —Ä–µ–π—Ç–∏–Ω–≥–∏' },
    ],
    gradient: 'from-success to-honey',
  },
  {
    id: 4,
    title: '–†—ã–Ω–æ–∫',
    subtitle: '–û–≥—Ä–æ–º–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞',
    content: '–ü–æ –¥–∞–Ω–Ω—ã–º American Pet Products Association (APPA):',
    stats: [
      { value: '$152B', label: '–û–±—ä—ë–º —Ä—ã–Ω–∫–∞ –≤ 2024', icon: <DollarSign size={32} /> },
      { value: '$157B', label: '–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 2025', icon: <TrendingUp size={32} /> },
      { value: '68M+', label: '–î–æ–º–æ—Ö–æ–∑—è–π—Å—Ç–≤ —Å —Å–æ–±–∞–∫–∞–º–∏ –≤ –°–®–ê', icon: <Users size={32} /> },
      { value: '400M+', label: '–°–æ–±–∞–∫ –≤ –º–∏—Ä–µ', icon: <Globe size={32} /> },
    ],
    gradient: 'from-honey to-warning',
  },
  {
    id: 5,
    title: '–ë–∏–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å',
    subtitle: '–ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–æ—Ö–æ–¥–∞',
    streams: [
      { title: 'Freemium –ø–æ–¥–ø–∏—Å–∫–∞', desc: 'AI-–∞–Ω–∞–ª–∏–∑ –∑–¥–æ—Ä–æ–≤—å—è –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è, –ø—Ä–µ–º–∏—É–º-—Ñ—É–Ω–∫—Ü–∏–∏', revenue: '30%' },
      { title: '–ö–æ–º–∏—Å—Å–∏—è –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', desc: '–° –ø—Ä–æ–¥–∞–∂ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥', revenue: '40%' },
      { title: '–†–µ–∫–ª–∞–º–∞ –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–∞', desc: '–ù–∞—Ç–∏–≤–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞, —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏', revenue: '20%' },
      { title: 'BoneCoin —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞', desc: '–û–±–º–µ–Ω, —Å—Ç–µ–π–∫–∏–Ω–≥, –∫–æ–º–∏—Å—Å–∏–∏', revenue: '10%' },
    ],
    gradient: 'from-sky to-burgundy',
  },
  {
    id: 6,
    title: '–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞',
    subtitle: '2025-2026',
    quarters: [
      { q: 'Q1 2025', items: ['–ó–∞–ø—É—Å–∫ MVP', '–ö–∞—Ä—Ç–∞ –∏ –õ–µ–Ω—Ç–∞', 'BoneCoin', '1K –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'] },
      { q: 'Q2 2025', items: ['–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å', 'DAO –∑–∞–ø—É—Å–∫', '–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', '10K –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'] },
      { q: 'Q3 2025', items: ['AI-–∞–Ω–∞–ª–∏–∑', 'NFT –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —ç–∫—Å–ø–∞–Ω—Å–∏—è', '50K –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'] },
      { q: 'Q4 2025', items: ['–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', 'GPS-—Ç—Ä–µ–∫–µ—Ä—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', 'B2B –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞', '100K –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'] },
    ],
    gradient: 'from-info to-success',
  },
  {
    id: 7,
    title: '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!',
    subtitle: '–ì—É–ª—è–π, –æ–±—â–∞–π—Å—è, –ø–æ–ª—É—á–∞–π –∫–æ—Å—Ç–æ—á–∫–∏',
    content: '–°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é –∫—Ä—É–ø–Ω–µ–π—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫',
    cta: [
      { text: '–°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ', link: '#', variant: 'primary' as const },
      { text: '–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º', link: '/partner', variant: 'secondary' as const },
      { text: '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ DAO', link: '/dao', variant: 'secondary' as const },
    ],
    gradient: 'from-burgundy to-sky',
  },
]

const partnerSlides = [
  {
    id: 1,
    title: '–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ Dogymorbis',
    subtitle: '–†–∞—Å—Ç–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏',
    content: '–ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ –∫—Ä—É–ø–Ω–µ–π—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ –ø—Ä–æ–¥–∞–∂–∏',
    icon: <Award size={80} className="text-honey" />,
    gradient: 'from-honey to-warning',
  },
  {
    id: 2,
    title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –¥–ª—è –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤',
    benefits: [
      { 
        icon: <Users size={32} />, 
        title: '–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è', 
        desc: '–î–æ—Å—Ç—É–ø –∫ —Ç—ã—Å—è—á–∞–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Å–æ–±–∞–∫ –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ'
      },
      { 
        icon: <TrendingUp size={32} />, 
        title: '–†–æ—Å—Ç –ø—Ä–æ–¥–∞–∂', 
        desc: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø—Ä–æ–¥–∞–∂ –Ω–∞ 30-50% –≤ –ø–µ—Ä–≤—ã–µ 3 –º–µ—Å—è—Ü–∞'
      },
      { 
        icon: <Zap size={32} />, 
        title: '–ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', 
        desc: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ç—Ä–∏–Ω—ã –∑–∞ 15 –º–∏–Ω—É—Ç, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7'
      },
      { 
        icon: <Heart size={32} />, 
        title: '–õ–æ—è–ª—å–Ω–æ—Å—Ç—å', 
        desc: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—ç—à–±–µ–∫–∞ –∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤'
      },
    ],
    gradient: 'from-success to-sky',
  },
  {
    id: 3,
    title: '–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ',
    features: [
      '‚úÖ –í–∏—Ç—Ä–∏–Ω–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏',
      '‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∞—Å–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏',
      '‚úÖ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å –∫—ç—à–±–µ–∫–æ–º –≤ BoneCoin',
      '‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ –≥–æ—Ä–æ–¥–∞',
      '‚úÖ –£—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏—è—Ö –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö',
      '‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂',
      '‚úÖ –î–æ—Å—Ç—É–ø –∫ API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π',
      '‚úÖ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
    ],
    gradient: 'from-info to-burgundy',
  },
  {
    id: 4,
    title: '–ö–µ–π—Å—ã —É—Å–ø–µ—Ö–∞',
    cases: [
      { 
        company: '–ó–æ–æ–º–∞–≥–∞–∑–∏–Ω "–ß–µ—Ç—ã—Ä–µ –ª–∞–ø—ã"', 
        result: '+45% –ø—Ä–æ–¥–∞–∂ –∑–∞ 2 –º–µ—Å—è—Ü–∞',
        quote: 'Dogymorbis –ø—Ä–∏–≤—ë–ª –Ω–∞–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ —Ä–∞–π–æ–Ω–∞',
      },
      { 
        company: '–í–µ—Ç–∫–ª–∏–Ω–∏–∫–∞ "–ê–π–±–æ–ª–∏—Ç"', 
        result: '+120 –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        quote: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –æ–∫—É–ø–∏–ª–∞—Å—å –≤ –ø–µ—Ä–≤—ã–π –∂–µ –º–µ—Å—è—Ü',
      },
      { 
        company: '–ì—Ä—É–º–∏–Ω–≥-—Å–∞–ª–æ–Ω "–ö—Ä–∞—Å–æ—Ç–∞ –ª–∞–ø"', 
        result: '85% –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å',
        quote: '–¢–µ–ø–µ—Ä—å –∑–∞–ø–∏—Å–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω—ã –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏ –≤–ø–µ—Ä—ë–¥',
      },
    ],
    gradient: 'from-sky to-success',
  },
  {
    id: 5,
    title: '–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã',
    plans: [
      {
        name: '–ë–∞–∑–æ–≤—ã–π',
        price: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
        features: ['–í–∏—Ç—Ä–∏–Ω–∞ –¥–æ 20 —Ç–æ–≤–∞—Ä–æ–≤', '–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ', '–ö–æ–º–∏—Å—Å–∏—è 15%'],
      },
      {
        name: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π',
        price: '2,990‚ÇΩ/–º–µ—Å',
        features: ['–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã', '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∏—Å–∫–µ', '–ö–æ–º–∏—Å—Å–∏—è 10%', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'],
        highlighted: true,
      },
      {
        name: '–ü—Ä–µ–º–∏—É–º',
        price: '9,990‚ÇΩ/–º–µ—Å',
        features: ['–í—Å—ë –∏–∑ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ', 'API-–¥–æ—Å—Ç—É–ø', '–ë–∞–Ω–Ω–µ—Ä—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', '–ö–æ–º–∏—Å—Å–∏—è 5%', '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä'],
      },
    ],
    gradient: 'from-burgundy to-honey',
  },
  {
    id: 6,
    title: '–ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å',
    subtitle: '3 –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞',
    steps: [
      { number: 1, title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', desc: '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚Äî 5 –º–∏–Ω—É—Ç' },
      { number: 2, title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞', desc: '–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏ —É—Å–ª—É–≥–∏ –≤ –≤–∏—Ç—Ä–∏–Ω—É' },
      { number: 3, title: '–ó–∞–ø—É—Å–∫', desc: '–ü–æ–ª—É—á–∞–π—Ç–µ –∑–∞–∫–∞–∑—ã –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ' },
    ],
    cta: { text: '–°—Ç–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º', variant: 'primary' as const },
    gradient: 'from-sky to-info',
  },
]

export default function PresentationPage() {
  const [mode, setMode] = useState<'general' | 'partner'>('general')
  const [currentSlide, setCurrentSlide] = useState(0)
  
  const slides = mode === 'general' ? generalSlides : partnerSlides

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length)
  }

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length)
  }

  const goToSlide = (index: number) => {
    setCurrentSlide(index)
  }

  const slide = slides[currentSlide]

  return (
    <div className="flex flex-col h-screen bg-background">
      <AppBar 
        title="–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è" 
        actions={
          <div className="flex gap-2">
            <Button 
              variant={mode === 'general' ? 'primary' : 'ghost'} 
              size="sm"
              onClick={() => { setMode('general'); setCurrentSlide(0); }}
            >
              –û–±—â–∞—è
            </Button>
            <Button 
              variant={mode === 'partner' ? 'primary' : 'ghost'} 
              size="sm"
              onClick={() => { setMode('partner'); setCurrentSlide(0); }}
            >
              –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è
            </Button>
          </div>
        }
      />

      {/* Slide */}
      <div className="flex-1 overflow-hidden">
        <AnimatePresence mode="wait">
          <motion.div
            key={`${mode}-${currentSlide}`}
            initial={{ opacity: 0, x: 100 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -100 }}
            transition={{ duration: 0.3 }}
            className="h-full"
          >
            <div className={`h-full bg-gradient-to-br ${slide.gradient} p-8 flex items-center justify-center`}>
              <div className="max-w-5xl w-full">
                <Card className="p-8 md:p-12" elevation={3}>
                  <div className="text-center mb-8">
                    {slide.icon && <div className="mb-6">{slide.icon}</div>}
                    <h1 className="text-display md:text-[40px] font-bold text-text-primary-light dark:text-text-primary-dark mb-3">
                      {slide.title}
                    </h1>
                    <p className="text-title text-text-secondary-light dark:text-text-secondary-dark">
                      {slide.subtitle}
                    </p>
                  </div>

                  {slide.content && (
                    <p className="text-label text-center text-text-primary-light dark:text-text-primary-dark mb-8">
                      {slide.content}
                    </p>
                  )}

                  {/* Points List */}
                  {('points' in slide) && slide.points && (
                    <ul className="space-y-3 max-w-2xl mx-auto">
                      {slide.points.map((point, i) => (
                        <motion.li
                          key={i}
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: i * 0.1 }}
                          className="flex items-start gap-3 text-label text-text-primary-light dark:text-text-primary-dark"
                        >
                          <span className="text-danger text-xl">‚óè</span>
                          <span>{point}</span>
                        </motion.li>
                      ))}
                    </ul>
                  )}

                  {/* Features Grid */}
                  {('features' in slide && slide.features && Array.isArray(slide.features) && typeof slide.features[0] === 'object') && (
                    <div className="grid md:grid-cols-3 gap-6">
                      {slide.features.map((feature: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: i * 0.1 }}
                          className="text-center p-6 bg-surface2-light dark:bg-surface2-dark rounded-lg"
                        >
                          <div className="text-4xl mb-3">{feature.icon}</div>
                          <h3 className="text-body font-bold text-text-primary-light dark:text-text-primary-dark mb-2">
                            {feature.title}
                          </h3>
                          <p className="text-caption text-text-secondary-light dark:text-text-secondary-dark">
                            {feature.desc}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Stats */}
                  {('stats' in slide) && slide.stats && (
                    <div className="grid md:grid-cols-4 gap-6">
                      {slide.stats.map((stat: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: i * 0.15 }}
                          className="text-center p-6 bg-white dark:bg-surface-dark rounded-lg elevation-2"
                        >
                          <div className="text-sky mb-3">{stat.icon}</div>
                          <p className="text-display font-bold text-text-primary-light dark:text-text-primary-dark mb-1">
                            {stat.value}
                          </p>
                          <p className="text-caption text-text-secondary-light dark:text-text-secondary-dark">
                            {stat.label}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Revenue Streams */}
                  {('streams' in slide) && slide.streams && (
                    <div className="space-y-4">
                      {slide.streams.map((stream: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, x: -20 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: i * 0.1 }}
                          className="p-4 bg-surface2-light dark:bg-surface2-dark rounded-lg"
                        >
                          <div className="flex items-center justify-between mb-2">
                            <h3 className="text-label font-bold text-text-primary-light dark:text-text-primary-dark">
                              {stream.title}
                            </h3>
                            <span className="text-title font-bold text-success">{stream.revenue}</span>
                          </div>
                          <p className="text-body text-text-secondary-light dark:text-text-secondary-dark">
                            {stream.desc}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Quarters */}
                  {('quarters' in slide) && slide.quarters && (
                    <div className="grid md:grid-cols-4 gap-4">
                      {slide.quarters.map((quarter: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: i * 0.1 }}
                          className="p-4 bg-surface2-light dark:bg-surface2-dark rounded-lg"
                        >
                          <h4 className="text-label font-bold text-sky mb-3">{quarter.q}</h4>
                          <ul className="space-y-2">
                            {quarter.items.map((item: string, j: number) => (
                              <li key={j} className="text-caption text-text-primary-light dark:text-text-primary-dark">
                                ‚Ä¢ {item}
                              </li>
                            ))}
                          </ul>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Benefits */}
                  {('benefits' in slide) && slide.benefits && (
                    <div className="grid md:grid-cols-2 gap-6">
                      {slide.benefits.map((benefit: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: i * 0.1 }}
                          className="p-6 bg-surface2-light dark:bg-surface2-dark rounded-lg"
                        >
                          <div className="text-sky mb-3">{benefit.icon}</div>
                          <h3 className="text-label font-bold text-text-primary-light dark:text-text-primary-dark mb-2">
                            {benefit.title}
                          </h3>
                          <p className="text-body text-text-secondary-light dark:text-text-secondary-dark">
                            {benefit.desc}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Features List (strings) */}
                  {('features' in slide && slide.features && Array.isArray(slide.features) && typeof slide.features[0] === 'string') && (
                    <div className="grid md:grid-cols-2 gap-3 max-w-3xl mx-auto">
                      {(slide.features as string[]).map((feature: string, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, x: -10 }}
                          animate={{ opacity: 1, x: 0 }}
                          transition={{ delay: i * 0.05 }}
                          className="text-label text-text-primary-light dark:text-text-primary-dark"
                        >
                          {feature}
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Cases */}
                  {('cases' in slide) && slide.cases && (
                    <div className="space-y-6">
                      {slide.cases.map((case_: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: i * 0.15 }}
                          className="p-6 bg-surface2-light dark:bg-surface2-dark rounded-lg"
                        >
                          <div className="flex items-start justify-between mb-3">
                            <h3 className="text-label font-bold text-text-primary-light dark:text-text-primary-dark">
                              {case_.company}
                            </h3>
                            <span className="text-body font-bold text-success">{case_.result}</span>
                          </div>
                          <p className="text-body italic text-text-secondary-light dark:text-text-secondary-dark">
                            &quot;{case_.quote}&quot;
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Plans */}
                  {('plans' in slide) && slide.plans && (
                    <div className="grid md:grid-cols-3 gap-6">
                      {slide.plans.map((plan: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, scale: 0.9 }}
                          animate={{ opacity: 1, scale: 1 }}
                          transition={{ delay: i * 0.1 }}
                          className={`p-6 rounded-lg ${
                            plan.highlighted 
                              ? 'bg-gradient-to-br from-sky to-info text-white elevation-3' 
                              : 'bg-surface2-light dark:bg-surface2-dark'
                          }`}
                        >
                          <h3 className={`text-label font-bold mb-2 ${
                            plan.highlighted ? 'text-white' : 'text-text-primary-light dark:text-text-primary-dark'
                          }`}>
                            {plan.name}
                          </h3>
                          <p className={`text-display font-bold mb-4 ${
                            plan.highlighted ? 'text-white' : 'text-sky'
                          }`}>
                            {plan.price}
                          </p>
                          <ul className="space-y-2">
                            {plan.features.map((feature: string, j: number) => (
                              <li key={j} className={`text-caption ${
                                plan.highlighted ? 'text-white opacity-90' : 'text-text-secondary-light dark:text-text-secondary-dark'
                              }`}>
                                ‚Ä¢ {feature}
                              </li>
                            ))}
                          </ul>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* Steps */}
                  {('steps' in slide) && slide.steps && (
                    <div className="grid md:grid-cols-3 gap-6 mb-8">
                      {slide.steps.map((step: any, i: number) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: i * 0.15 }}
                          className="text-center"
                        >
                          <div className="w-16 h-16 rounded-full bg-sky text-white flex items-center justify-center text-display font-bold mx-auto mb-4">
                            {step.number}
                          </div>
                          <h3 className="text-label font-bold text-text-primary-light dark:text-text-primary-dark mb-2">
                            {step.title}
                          </h3>
                          <p className="text-body text-text-secondary-light dark:text-text-secondary-dark">
                            {step.desc}
                          </p>
                        </motion.div>
                      ))}
                    </div>
                  )}

                  {/* CTA */}
                  {('cta' in slide) && Array.isArray(slide.cta) && (
                    <div className="flex flex-wrap justify-center gap-4 mt-8">
                      {slide.cta.map((button: any, i: number) => (
                        <Button key={i} variant={button.variant} size="lg">
                          {button.text}
                        </Button>
                      ))}
                    </div>
                  )}
                  {('cta' in slide) && !Array.isArray(slide.cta) && (
                    <div className="text-center">
                      <Button variant={(slide.cta as any).variant} size="lg">
                        {(slide.cta as any).text}
                      </Button>
                    </div>
                  )}
                </Card>
              </div>
            </div>
          </motion.div>
        </AnimatePresence>
      </div>

      {/* Controls */}
      <div className="bg-surface-light dark:bg-surface-dark border-t border-line-light dark:border-line-dark p-4">
        <div className="max-w-4xl mx-auto flex items-center justify-between">
          <button
            onClick={prevSlide}
            disabled={currentSlide === 0}
            className="p-3 rounded-lg hover:bg-black/5 dark:hover:bg-white/5 disabled:opacity-30 disabled:cursor-not-allowed"
          >
            <ChevronLeft size={24} />
          </button>

          <div className="flex items-center gap-2">
            {slides.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`h-2 rounded-full transition-all ${
                  index === currentSlide
                    ? 'bg-sky w-8'
                    : 'bg-surface2-light dark:bg-surface2-dark w-2'
                }`}
              />
            ))}
          </div>

          <button
            onClick={nextSlide}
            disabled={currentSlide === slides.length - 1}
            className="p-3 rounded-lg hover:bg-black/5 dark:hover:bg-white/5 disabled:opacity-30 disabled:cursor-not-allowed"
          >
            <ChevronRight size={24} />
          </button>
        </div>
      </div>
    </div>
  )
}


